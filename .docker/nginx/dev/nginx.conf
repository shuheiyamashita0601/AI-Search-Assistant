# メインサイト設定（開発環境用）
# フロントエンドとバックエンドAPIのリバースプロキシ設定

# HTTPサーバー設定（ポート80）
server {
    listen 80;
    listen [::]:80;
    
    # サーバー名の設定（開発環境用）
    server_name localhost 127.0.0.1;
    
    # ルートディレクトリ
    root /var/www/html;
    
    # インデックスファイル
    index index.html;

    # ヘルスチェックエンドポイント
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Nginxステータスページ（開発環境専用）
    location /nginx_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        allow 172.21.0.0/16;  # Docker内部ネットワーク
        deny all;
    }

    # バックエンドAPI用のリバースプロキシ設定
    location /api/ {
        # レート制限の適用
        limit_req zone=api_limit burst=20 nodelay;
        
        # アップストリームサーバーにプロキシ
        proxy_pass http://backend_servers;
        
        # プロキシヘッダーの設定
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        
        # タイムアウト設定（開発環境用に長めに設定）
        proxy_connect_timeout 120s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
        
        # バッファリング設定
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
        
        # キャッシュを無効化（開発環境では最新データを取得）
        proxy_cache_bypass $http_upgrade;
        
        # エラーページの設定
        proxy_intercept_errors on;
        error_page 502 503 504 /50x.html;
    }

    # WebSocket接続用の設定（将来のリアルタイム機能用）
    location /ws {
        proxy_pass http://backend_servers;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket用のタイムアウト設定
        proxy_read_timeout 86400s;
        proxy_send_timeout 86400s;
    }

    # すべてのその他のリクエストをNext.jsに転送
    location / {
        # レート制限の適用
        limit_req zone=general_limit burst=50 nodelay;
        
        # フロントエンドサーバーにプロキシ
        proxy_pass http://frontend_servers;
        
        # Next.js用のプロキシヘッダー設定
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Next.js開発サーバー用のタイムアウト設定
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # キャッシュを無視（開発環境では最新データを取得）
        proxy_cache_bypass $http_upgrade;
        
        # Next.jsのホットリロード対応
        proxy_redirect off;
    }

    # エラーページの設定
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}
